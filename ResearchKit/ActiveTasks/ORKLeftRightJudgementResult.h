/*
 Copyright (c) 2020, Dr David W. Evans. All rights reserved.
 
 Redistribution and use in source and binary forms, with or without modification,
 are permitted provided that the following conditions are met:
 
 1.  Redistributions of source code must retain the above copyright notice, this
 list of conditions and the following disclaimer.
 
 2.  Redistributions in binary form must reproduce the above copyright notice,
 this list of conditions and the following disclaimer in the documentation and/or
 other materials provided with the distribution.
 
 3.  Neither the name of the copyright holder(s) nor the names of any contributors
 may be used to endorse or promote products derived from this software without
 specific prior written permission. No license is granted to the trademarks of
 the copyright holders even if such marks are included in this software.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#import <ResearchKit/ORKResult.h>


NS_ASSUME_NONNULL_BEGIN

/**
 The `ORKLeftRightJudgementResult` class represents the result of a single attempt within an ORKLeftRightJudgementStep.
 
 A left/right judgement result is typically generated by the framework as the task proceeds. When the task completes, it may be appropriate to serialize the sample for transmission to a server or to immediately perform analysis on it.
 */
ORK_CLASS_AVAILABLE
@interface ORKLeftRightJudgementResult: ORKResult

/**
 The `imageNumber` property is the number (the first of which has the value '1') within the sequence of images presented during the task.
 */
@property (nonatomic, assign) NSInteger imageNumber;

/**
 The `imageName` property is the file name of the image presented (without the extension).
 */
@property (nonatomic, copy) NSString *imageName;

/**
 The `orientationPresented` property is the anatomical direction towards which the fingers (hand) or toes (foot) point as presented within the image.
 */
@property (nonatomic, copy) NSString *orientationPresented;

/**
 The `sidePresented` property is the side of the body presented in the image.
 */
@property (nonatomic, copy) NSString *sidePresented;

/**
 The `sideSelected` property corresponds to the button tapped by the user as an answer.
 */
@property (nonatomic, copy, nullable) NSString *sideSelected;

/**
 The 'sideMatch' property is a Boolean value indicating whether the value of sideSelected matches that of sidePresented.
 The value of this property is `YES` when there is a match, and `NO` otherwise.
 */
@property (nonatomic, assign) BOOL sideMatch;

/**
 The `imageDuration` property is the time taken (in seconds) for a response to an image, equal to the difference between timestamps from when the image is displayed to when the button is pressed.
 */
@property (nonatomic, assign) double imageDuration;

/**
The `leftPercentCorrect` property is the percentage of correct 'sideMatch' answers imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Left'. This updates with every image presented..
*/
@property (nonatomic, assign) double leftPercentCorrect;

/**
The `rightPercentCorrect` property is the percentage of correct 'sideMatch' answers imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Right'. This updates with every image presented.
*/
@property (nonatomic, assign) double rightPercentCorrect;

/**
 The `leftMeanDuration` property is the mean (average) of imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Left'. This updates with every image presented.
 */
@property (nonatomic, assign) double leftMeanDuration;

/**
 The `meanRightDuration` property is the mean (average) of imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Right'. This updates with every image presented.
 */
@property (nonatomic, assign) double rightMeanDuration;;

/**
 The `leftSDDuration` property is the standard deviation (a measure of distribution) of imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Left'. This updates with every image presented.
 */
@property (nonatomic, assign) double leftSDDuration;

/**
 The `rightSDDuration` property is the standard deviation (a measure of distribution) of imageDuration (in seconds) for all images in the task so far where sidePresented value was 'Right'. This updates with every image presented.
 */
@property (nonatomic, assign) double rightSDDuration;


@end

NS_ASSUME_NONNULL_END

